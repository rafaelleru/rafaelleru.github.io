<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rafaelleru</title>
    <link>/</link>
    <description>Recent content on Rafaelleru</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hy I&#39;m Rafa, I&#39;m currently studiying a computer science degree at unversity of granada. I&#39;m a python 3 and c++ lover, emacs apasionate and arch-linux user.
I&#39;m interested in algorithms desing, machine learning, android development and open source software.
I&#39;m currently contributing to various open source projects. Some of them are:
 orgzly TheAlgorithms angrykoala/gaucho  Also I&#39;m developing torrent player, stream torrent powered music player, and porting the amazing i3session to python 3.</description>
    </item>
    
    <item>
      <title>Small-shell con eshell</title>
      <link>/blog/small-shell/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0200</pubDate>
      
      <guid>/blog/small-shell/</guid>
      <description>Hace tiempo me encontré con una idea que me encanto, poder abrir rapidamente una ventana en emacs que contenga un emulador de terminal, para hacer tareas rapidas en ella. Lo ví en el archivo de configuración de @vterron, la función era small-shell y lucía tal que así:
(defun small-shell () (interactive) (split-window-vertically) (other-window 1) (shrink-window (- (window-height) 12)) (ansi-term))  Pero para mis necesidades se quedaba un poco corta, así que la modifiqué del siguiente modo.</description>
    </item>
    
    <item>
      <title>Por qué todo el mundo debería probar un twm</title>
      <link>/blog/tilingwm/</link>
      <pubDate>Fri, 12 May 2017 00:00:00 +0200</pubDate>
      
      <guid>/blog/tilingwm/</guid>
      <description>Varias veces me habían propuesto usar alguno de los varios window manager que hay disponibles para linux. Tengo que decir que al principio no le veía sentido, ¿Por que usar algo que en apariencia es mucho mas feo que un entorno de escritorio clásico y que ademas tienes mucha menos funcionalidad por defecto?
En primer lugar, la funcionalidad como se entiende en un entorno de escritorio clásico como gnome o KDE no es aplicable a los twm.</description>
    </item>
    
    <item>
      <title>Configuracion de emacs.</title>
      <link>/emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/emacs/</guid>
      <description>Credits to Harry R. Schwartz, @hrs, Zamansky.
Informacion personal (setq user-full-name &amp;quot;Rafael Leyva Ruiz&amp;quot; user-mail-address &amp;quot;rafaelleru95103@gmail.com&amp;quot; calendar-latitude 42.2 calendar-longitude -71.1 calendar-location-name &amp;quot;Madrid, ES&amp;quot;)  Madrid, ES  Gestion de paquetes melpa y cask #+BEGIN_SRC emacs-lisp (require &#39;cask &#34;~/.cask/cask.el&#34;) (cask-initialize) (require &#39;pallet) #+END_SRC
#+RESULTS:
pallet  Use package #+BEGIN_SRC emacs-lisp (unless (package-installed-p &#39;use-package) (package-refresh-contents) (package-install &#39;use-package)) #+END_SRC
#+RESULTS:
Ajustes de la interfaz Ocultar botones que no uso y la barra de scroll.</description>
    </item>
    
    <item>
      <title>Mantener una lista de articulos para leer con org-mode</title>
      <link>/blog/to_read_list_emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/to_read_list_emacs/</guid>
      <description>Orgmode es le leche, no creo que pueda encontrar una frase mejor para empezar este post. Desde hace tiempo lo uso para mantener mi lista de TODOs, gestionar mi calendario, etc.
Aparte de lo comentado anteriormente mentengo tambien una lista de enlaces y articulos que leer, la almaceno en un archivo llamado to-read.org y hasta hace poco para abrirlo tenía que abrir emacs, abrir el archivo y empezar a navegar por los enlaces, pero hace unos días se me ocurrió una idea.</description>
    </item>
    
    <item>
      <title>Programando C&#43;&#43; en emacs.</title>
      <link>/drafts/emacsc&#43;&#43;/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/drafts/emacsc&#43;&#43;/</guid>
      <description>Hace unos días prepare una pequeña introducción para comentar las herramientas necesarias para progamar C++ en emacs con todas las ventajas de un IDE pero con la comodidad de mi editor favorito. Para ello me centre en unas funcionalidades básicas que son las siguientes:
 Coloreado de la sintaxis. Syntax higlight autocompletado con company  Todo esto pensando en programar proyectos medianamente grandes de C++ ya que si solo vamos a editar un par de archivos con solo instalar estos paquetes emacs hará una gestión mas que decente.</description>
    </item>
    
    <item>
      <title>Seleccionando de una manera mas inteligente en emacs</title>
      <link>/blog/expand-region-emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/expand-region-emacs/</guid>
      <description>El otro día viendo la serie de videos de Myke Zamansky sobre emacs, habló sobre un paquete de emacs llamado expand-region. El funcionamiento es muy sencillo nos permite seleccionar con una sola pulsación en el atajo que definamos el texto entre dos delimitadores, ya sean parentesis, comillas, etc.
Para usarlo lo primero es instalarlo, ejecutando en emacs M-x y escribiendo package-install RET expand-region RET donde RET es la tecla enter.</description>
    </item>
    
  </channel>
</rss>