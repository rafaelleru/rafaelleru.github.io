<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Rafael Leyva Ruiz</title><link>https://rafaelleru.github.io/tags/linux/</link><description>Recent content in linux on Rafael Leyva Ruiz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rafaelleru.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Use custom python paths on neovim lsp client</title><link>https://rafaelleru.github.io/blog/custom-python-paths-nvim-lsp/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://rafaelleru.github.io/blog/custom-python-paths-nvim-lsp/</guid><description>Recently we started to use airflow in my current company, and I found an issue, LSP was not recognisin our custom plugins and DAGS inside of the airflow folder. This was caused because airflow is also a package that is installed in my virtualenv, so jedi was not able to discover definitions for example.
That was caused because in my PYTHONPATH airflow was a package, so jedi was not looking into the airflow folder for more source code, causing LSP functionality to not work fine.</description></item><item><title>Managing dotfiles with Ansible (II)</title><link>https://rafaelleru.github.io/blog/ansibleii/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>https://rafaelleru.github.io/blog/ansibleii/</guid><description>Apart from linking my config files, I needed to build and install a bunch of programs in each new machine I set up, so I was using some bash scripts. I decided to use ansible for this task because it fits perfectly my needs to do this.
In this post, there are some examples of programs I am building manually with ansible, my reasons, and some thoughts.
1. Building my neovim copy â†’ The neovim role By default ubuntu repositories have a very old neovim version (the last time I installed neovim from ubuntu LSP was not available, but it was ready in the master branch of the project).</description></item></channel></rss>